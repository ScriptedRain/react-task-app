{"version":3,"sources":["components/Button.jsx","components/Header.js","components/Task.jsx","components/Tasks.jsx","components/AddTask.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","console","log","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d178a381.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button style={{ backgroundColor: color}} className='btn' onClick={onClick}>{text}</button>\r\n  )\r\n  \r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n  text: 'btn'\r\n}\r\n\r\nButton.propTypes = {\r\n  color: PropTypes.string,\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\r\n\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n      <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'New Task'} onClick={onAdd} />\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n      <h3>{task.text} <FaTimes style={{ color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)} /></h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  \r\n  return (\r\n    <>\r\n    {tasks.map((task) => (<Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react' \r\n\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(!text) {\r\n      alert('Please Add a task')\r\n      return\r\n    }\r\n\r\n    onAdd({ text, day, reminder})\r\n    \r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input type=\"text\" placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)} />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Day</label>\r\n        <input type=\"day\" placeholder=\"Add Date & time\" value={day} onChange={(e) => setDay(e.target.value)} />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Set Reminder?</label>\r\n        <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n      </div>\r\n\r\n      <input type=\"submit\" value='Save Task' className='btn btn-block' style={{backgroundColor: 'rgb(0, 107, 201)'}} />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import './App.css';\r\nimport Header from './components/Header';\r\nimport Tasks from './components/Tasks'\r\nimport { useState } from 'react'\r\nimport AddTask from './components/AddTask';\r\n\r\n\r\nfunction App() {\r\n  const [showAddTask, setShowAddTask ] = useState (false) \r\n\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n    id: 1,\r\n    text: 'Icecream Appointment',\r\n    day: 'today',\r\n    reminder: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Bussiness Appointment',\r\n      day: 'today',\r\n      reminder: true,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'school Appointment',\r\n      day: 'friday',\r\n      reminder: false,\r\n    },\r\n  ])\r\n\r\n  //Add Task\r\n  const addTask = (task) => {\r\n    const id = Math.floor(Math.random() * 10000) + 1\r\n\r\n    console.log(id)\r\n    const newTask = { id, ...task }\r\n    setTasks([...tasks, newTask]) \r\n  }\r\n\r\n\r\n  //delete task. Set up back end data to delete the task once its done.\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id))\r\n  }\r\n\r\n  //toggle reminder\r\n  const toggleReminder = (id) => {\r\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header onAdd={() => setShowAddTask(!showAddTask) } />\r\n      {showAddTask && <AddTask onAdd={addTask} />}\r\n      {tasks.length > 0 ?<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'No Tasks Here!'}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}